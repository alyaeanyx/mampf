error_log  /dev/stderr warn;
#daemon off;
worker_processes 4;
user nginx www-data;

events {
	worker_connections 10;
}

http {
 
  lua_package_path "/opt/nginx-big-upload/lib/?.lua;;";
 
  server {
    listen 80;

    access_log /dev/stdout combined;
    error_log /dev/stderr warn;
 
    root /var/www;
 
    #we won't send chunks larger than 10MB
    client_max_body_size 20m;
 
    set $file_storage_path "/storage";
 
    #backend managed with crc32 support
    location = /upload {
      set $storage backend_file;
      set $bu_checksum on;
      set $bu_sha1 on;
 
      #here goes your backend path
      set $backend_url /bknd;
      content_by_lua_file /opt/nginx-big-upload/lib/big-upload.lua;
     }
 
    #this is used only to demonstrate download of an uploaded file, not safe for production
    location /file/ {
      rewrite ^/file/([0-9]+)/.+$ $file_storage_path/$1 last;
    }
 
    #this is used only to demonstrate download of an uploaded file, not safe for production
    location /opt/test {
      internal;
      root /;
    }
 
    location /bknd {
      internal;
      access_log off;
      #if your backend is under named location
      content_by_lua 'ngx.exec("@backend")';
    }
 
    # echo body as answer to the completed upload
    location @backend {
      content_by_lua '
         ngx.header["X-Test"]="testvalue"
         ngx.header["X-Checksum"]=ngx.req.get_headers()["X-Checksum"]
         ngx.status = 200
         ngx.print(ngx.req.get_body_data()) -- echo request body
      ';
    }
 
  }
}
